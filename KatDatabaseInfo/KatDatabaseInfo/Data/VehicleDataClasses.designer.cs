#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KatDatabaseInfo.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class VehicleDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    #endregion
		
		public VehicleDataClassesDataContext() : 
				base(global::KatDatabaseInfo.Properties.Settings.Default.DatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewVehicle")]
		public int AddNewVehicle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistryNumber", DbType="NVarChar(10)")] string registryNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FrameNumber", DbType="NVarChar(20)")] string frameNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EngineNumber", DbType="NVarChar(10)")] string engineNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Brand", DbType="NVarChar(50)")] string brand, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Model", DbType="NVarChar(50)")] string model, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Seats", DbType="SmallInt")] System.Nullable<short> seats, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weight", DbType="Int")] System.Nullable<int> weight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Color", DbType="NVarChar(50)")] string color, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistryDate", DbType="NVarChar(50)")] string registryDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DrivingLicenseNumber", DbType="NChar(10)")] string drivingLicenseNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), registryNumber, frameNumber, engineNumber, brand, model, type, seats, weight, color, registryDate, drivingLicenseNumber);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RegistryNumber;
		
		private string _FrameNumber;
		
		private string _EngineNumber;
		
		private string _Brand;
		
		private string _Model;
		
		private string _Type;
		
		private short _Seats;
		
		private int _Weight;
		
		private string _Color;
		
		private string _RegistryDate;
		
		private string _DrivingLicenseNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRegistryNumberChanging(string value);
    partial void OnRegistryNumberChanged();
    partial void OnFrameNumberChanging(string value);
    partial void OnFrameNumberChanged();
    partial void OnEngineNumberChanging(string value);
    partial void OnEngineNumberChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSeatsChanging(short value);
    partial void OnSeatsChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnRegistryDateChanging(string value);
    partial void OnRegistryDateChanged();
    partial void OnDrivingLicenseNumberChanging(string value);
    partial void OnDrivingLicenseNumberChanged();
    #endregion
		
		public Vehicle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistryNumber", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RegistryNumber
		{
			get
			{
				return this._RegistryNumber;
			}
			set
			{
				if ((this._RegistryNumber != value))
				{
					this.OnRegistryNumberChanging(value);
					this.SendPropertyChanging();
					this._RegistryNumber = value;
					this.SendPropertyChanged("RegistryNumber");
					this.OnRegistryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FrameNumber
		{
			get
			{
				return this._FrameNumber;
			}
			set
			{
				if ((this._FrameNumber != value))
				{
					this.OnFrameNumberChanging(value);
					this.SendPropertyChanging();
					this._FrameNumber = value;
					this.SendPropertyChanged("FrameNumber");
					this.OnFrameNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineNumber", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EngineNumber
		{
			get
			{
				return this._EngineNumber;
			}
			set
			{
				if ((this._EngineNumber != value))
				{
					this.OnEngineNumberChanging(value);
					this.SendPropertyChanging();
					this._EngineNumber = value;
					this.SendPropertyChanged("EngineNumber");
					this.OnEngineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seats", DbType="SmallInt NOT NULL")]
		public short Seats
		{
			get
			{
				return this._Seats;
			}
			set
			{
				if ((this._Seats != value))
				{
					this.OnSeatsChanging(value);
					this.SendPropertyChanging();
					this._Seats = value;
					this.SendPropertyChanged("Seats");
					this.OnSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistryDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RegistryDate
		{
			get
			{
				return this._RegistryDate;
			}
			set
			{
				if ((this._RegistryDate != value))
				{
					this.OnRegistryDateChanging(value);
					this.SendPropertyChanging();
					this._RegistryDate = value;
					this.SendPropertyChanged("RegistryDate");
					this.OnRegistryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrivingLicenseNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string DrivingLicenseNumber
		{
			get
			{
				return this._DrivingLicenseNumber;
			}
			set
			{
				if ((this._DrivingLicenseNumber != value))
				{
					this.OnDrivingLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._DrivingLicenseNumber = value;
					this.SendPropertyChanged("DrivingLicenseNumber");
					this.OnDrivingLicenseNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
